import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String text = input.nextLine();
        Pattern p = Pattern.compile(
                "((([0-9a-fA-F]{1,4}:){1,7})([0-9a-fA-F]{1,4}))"+ // Полное соответсвие *:*:*:*:*:*:*:*
                        "(([0-9a-fA-F]{1,4}:)(:([0-9a-fA-F]{1,4})){1,6})|"+ // При отсутствие 2 блока *::*:*:*:*:*:*
                        "((([0-9a-fA-F]{1,4}:){1,2})(:([0-9a-fA-F]{1,4})){1,5})|"+ // При отсутствие 3 блока *:*::*:*:*:*:*
                        "((([0-9a-fA-F]{1,4}:){1,3})(:([0-9a-fA-F]{1,4})){1,4})|"+ // При отсутствие 4 блока *:*:*::*:*:*:*
                        "((([0-9a-fA-F]{1,4}:){1,4})(:([0-9a-fA-F]{1,4})){1,3})|"+ // При отсутствие 5 блока *:*:*:*::*:*:*
                        "((([0-9a-fA-F]{1,4}:){1,5})(:([0-9a-fA-F]{1,4})){1,2})|"+ // При отсутствие 6 блока *:*:*:*:*::*:*
                        "((([0-9a-fA-F]{1,4}:){1,6})(:([0-9a-fA-F]{1,4})))|"+ // При отсутствие 7 блока *:*:*:*:*:*::*
                        "((([0-9a-fA-F]{1,4}:){1,7}):)|"+ // При отсутствие 8 блока *:*:*:*:*:*:*::
                        "(:(((:[0-9a-fA-F]{1,4}){1,7})|:))" /* При отсутствие 1 блока ::*:*:*:*:*:*:* или ::* и так далее с другими
                        еще почему то не работало ::* когда у меня блок на проверку ::* стоял первым, когда переставил местами все заработало*/
        );
        Matcher ipv6 = p.matcher(text);
        if (ipv6.find()) {
            System.out.println(ipv6.group());
        }
        else {
            System.out.println("В данном тексте нету ipv6");
        }
    }
}
